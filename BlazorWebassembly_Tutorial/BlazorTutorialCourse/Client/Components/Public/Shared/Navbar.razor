<nav class="navbar nav-underline navbar-expand-lg d-flex flex-wrap navbar-light shadow-no-hover justify-content-between align-items-center pb-lg-3">
	<a href="/" class="navbar-brand md-f-size-1-5 text-dark ps-2 m-0 mx-lg-5 fw-bold">
		John Doe<span class="text-dark fw-normal"> &#8211; .NET Developer</span>
	</a>

	<button class="navbar-toggler mx-1" type="button" data-bs-toggle="collapse"
		data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
		aria-expanded="false" aria-label="Toggle navigation">
		<span class="navbar-toggler-icon"></span>
	</button>

	<div class="collapse navbar-collapse" id="navbarSupportedContent">
		<ul class="navbar-nav">
			<li class="nav-item">
				<a href="@HomePageUri" class="nav-link mx-5 md-and-smaller-my-3 @(IsPageActive(HomePageUri) ? "active" : string.Empty)">Home</a>
			</li>
			<li class="nav-item">
				<a href="@SkillsPageUri" class="nav-link mx-5 md-and-smaller-my-3 @(IsPageActive(SkillsPageUri) ? "active" : string.Empty)">Skills</a>
			</li>
			<li class="nav-item">
				<a href="@PortfolioPageUri" class="nav-link mx-5 md-and-smaller-my-3 @(IsPageActive(PortfolioPageUri) ? "active" : string.Empty)">Portfolio</a>
			</li>
			<li class="nav-item">
				<a href="@BlogPageUri" class="nav-link mx-5 md-and-smaller-my-3 @(IsPageActive(BlogPageUri) ? "active" : string.Empty)">Blog</a>
			</li>
			<li class="nav-item">
				<a href="@AboutPageUri" class="nav-link mx-5 md-and-smaller-my-3 @(IsPageActive(AboutPageUri) ? "active" : string.Empty)">About</a>
			</li>
			<li class="nav-item">
				<a href="@ContactPageUri" class="nav-link mx-5 md-and-smaller-my-3 @(IsPageActive(ContactPageUri) ? "active" : string.Empty)">Contact</a>
			</li>
		</ul>

	</div>


</nav>


@code
{
	//public
	[Inject] public NavigationManager NavigationManager { get; set; }

	public const string HomePageUri = "/";
	public const string SkillsPageUri = "/skills";
	public const string PortfolioPageUri = "/portfolio";
	public const string BlogPageUri = "/blog";
	public const string AboutPageUri = "/about";
	public const string ContactPageUri = "/contact";

	private bool IsPageActive(string pageToCheckUri)
	{
		string[] currentUriSplitBetweenSlashes = NavigationManager.Uri.Split('/').Skip(3).ToArray();

		if (pageToCheckUri == HomePageUri)
		{
			if (currentUriSplitBetweenSlashes.Last().Length == 0)
			{
				return true;
			}
		}
		else
		{
			string[] pageToCheckUriSplitBetweenSlashes = pageToCheckUri.Split('/').Skip(1).ToArray();

			foreach (string currentUriPart in currentUriSplitBetweenSlashes)
			{
				foreach (string pageToCheckUriPart in pageToCheckUriSplitBetweenSlashes)
				{
					if (pageToCheckUriPart == currentUriPart)
					{
						return true;
					}
				}
			}
		}

		return false;
	}

}
